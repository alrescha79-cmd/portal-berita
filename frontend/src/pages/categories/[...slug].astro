---
import BaseLayout from "@layouts/BaseLayout.astro";
import MainSection from "@components/ui/sections/MainSection.astro";
import BlogCard from "@components/blog/BlogCard.astro";
import { SITE } from "@/config";

const URL = Astro.url.href;
const categoriesURL = `${Astro.url.origin}/categories`;

let posts: any[] = [];
let loading = true;
const category = decodeURIComponent(Astro.params.slug || "");

async function fetchNewsCategories() {
    try {
        const response = await fetch(
            `${import.meta.env.HOST}/news?category=${encodeURIComponent(category)}`,
        );
        const result = await response.json();
        if (result.data && result.data.length > 0) {
            posts = result.data.filter((post: { category: string }) => post.category === category);
        }
    }
    catch (error) {
        console.error("Error fetching posts:", error);
    }
    finally {
        loading = false;
    }
}

await fetchNewsCategories();
---

<BaseLayout
    title={`News in ${category}`}
    description={`All news in ${category}`}
    structuredData={{
        "@context": "https://schema.org",
        "@type": "WebPage",
        "inLanguage": "en-US",
        "@id": URL,
        "url": URL,
        "name": `${category} - ${SITE.title}`,
        "description": `All news in ${category}`,
        "isPartOf": {
            "@type": "WebSite",
            "url": categoriesURL,
            "name": `All Categories - ${SITE.title}`,
        },
    }}
>
    <MainSection
        title={`Category: ${category}`}
        subTitle={`All news in ${category}`}
        btnExists={true}
        btnTitle="Go to Categories"
        btnURL="/categories"
    />

    <section
        class="mx-auto px-4 py-10 sm:px-6 lg:px-8 lg:pt-10 lg:py-14 2xl:max-w-full"
    >
        <div
            class="grid sm:grid-cols-2 lg:grid-cols-3 items-center gap-6 md:gap-10"
        >
            {
                loading
? (
                    <p>Loading...</p>
                )
: posts.length > 0
? (
                    posts.map(post => (
                        <BlogCard
                            key={post.id}
                            slug={post.slug}
                            title={post.title}
                            publishDate={new Date(
                                post.createdAt._seconds * 1000,
                            ).toLocaleDateString()}
                            category={post.category}
                            thumbnailURL={post.thumbnailURL}
                        />
                    ))
                )
: (
                    <p>No posts available in this category.</p>
                )
            }
        </div>
    </section>
</BaseLayout>
