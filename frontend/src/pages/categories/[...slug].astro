---
import BaseLayout from "@layouts/BaseLayout.astro";
import MainSection from "@components/ui/sections/MainSection.astro";
import BlogCard from "@components/blog/BlogCard.astro";
import { SITE } from "@/config";

const URL = Astro.url.href;
const categoriesURL = `${Astro.url.origin}/categories`;

let posts: any[] = [];
let loading = true;
const category = decodeURIComponent(Astro.params.slug || "");

async function fetchNewsCategories() {
    try {
        const response = await fetch(
            `${import.meta.env.HOST}/news?category=${encodeURIComponent(category)}`,
        );
        const result = await response.json();
        if (result.data && result.data.length > 0) {
            posts = result.data.filter((post: { category: string }) => post.category === category);
        }
    }
    catch (error) {
        console.error("Error fetching posts:", error);
    }
    finally {
        loading = false;
    }
}

await fetchNewsCategories();

function formatDate(dateInput: string | number | Date) {
    const days = ["Minngu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"];
    const months = [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
    ];

    const date = typeof dateInput === "object" && dateInput !== null && "_seconds" in dateInput
        ? new Date((dateInput as { _seconds: number })._seconds * 1000)
        : new Date(dateInput);
    const dayName = days[date.getDay()];
    const day = date.getDate();
    const month = months[date.getMonth()];
    const year = date.getFullYear();

    return `${dayName}, ${day} ${month} ${year}`;
}

---

<BaseLayout
    title={`${category}`}
    description={`Semua berita tentang ${category}`}
    structuredData={{
        "@context": "https://schema.org",
        "@type": "WebPage",
        "inLanguage": "en-US",
        "@id": URL,
        "url": URL,
        "name": `${category} - ${SITE.title}`,
        "description": `Semua berita tentang ${category}`,
        "isPartOf": {
            "@type": "WebSite",
            "url": categoriesURL,
            "name": `Semua Kategori - ${SITE.title}`,
        },
    }}
>
    <MainSection
        title={`Kategori ${category}`}
        subTitle={`Semua berita tentang ${category}`}
        btnExists={true}
        btnTitle="Lihat Semua Kategori"
        btnURL="/categories"
    />

    <section
        class="mx-auto px-4 py-10 sm:px-6 lg:px-8 lg:pt-10 lg:py-14 2xl:max-w-full"
    >
        <div
            class="grid sm:grid-cols-2 lg:grid-cols-3 items-center gap-6 md:gap-10"
        >
            {
                loading
? (
                    <p>Loading...</p>
                )
: posts.length > 0
? (
                    posts.map(post => (
                        <BlogCard
                            key={post.id}
                            slug={post.slug}
                            title={post.title}
                            author={post.author}
                            publishDate={formatDate(post.createdAt)}
                            thumbnailURL={post.thumbnailURL}
                        />
                    ))
                )
: (
                    <p>No posts available in this category.</p>
                )
            }
        </div>
    </section>
</BaseLayout>
